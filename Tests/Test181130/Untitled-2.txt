



// int main()
// {
//     #ifndef ONLINE_JUDGE
//     freopen("minimum.in","r",stdin);
//     freopen("minimum.out","w",stdout);
//     #endif

//     scanf("%d %d",&n,&m);
//     for(int i=1;i<=n;i++)
//     {
//         black[i]=read();
//     }
//     for(int i=1;i<=n;i++)
//     {
//         for(int j=1;j<=n;j++)
//         {
//             s[i][j]=INF;
//         }
//     }
//     for(int i=1;i<=m;i++)
//     {
//         int st=read();
//         int ed=read();
//         if(st>5000||ed>5000)
//         {
//             printf("impossible");
//             return 0;
//         }
//         s[st][ed]=read();
//     }
//     for(int i=1;i<=n;i++)
//     {
//         dijk(i);
//     }
//     printf("%d")
// }

// void dijk(int st)
// {
//     for(int i=1;i<=n;i++)
//     {
//         dist[i]=INF;
//     }
//     dist[st]=0;
//     int x;
//     for(int i=1;i<=n;i++)
//     {
//         int _min=INF;
//         for(int j=1;j<=n;j++)
//         {
//             if(vst[j]==0&&dist[j]<_min)
//             {
//                 _min=dist[j];
//                 x=j;
//             }
            
//         }
//         vst[x]=1;
//         for(int j=1;j<=n;j++)
//         {
//             if(vst[j]==0&&s[x][j]<INF&&dist[j]>dist[x]+s[x][j])
//             {
//                 dist[j]=dist[x]+s[x][j];
//             }
//         }
//     }
// }

    // for(int i=1;i<=n;i++)
    // {
    //     for(int j=1;j<=n;j++)
    //     {
    //         printf("f[%d][%d]=%d\n",i,j,f[i][j]);
    //     }
    // }